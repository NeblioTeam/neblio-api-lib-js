/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BurnTokenRequestBurn from './BurnTokenRequestBurn';
import SendTokenRequestTo from './SendTokenRequestTo';

/**
 * The BurnTokenRequest model module.
 * @module model/BurnTokenRequest
 * @version 1.2.1
 */
class BurnTokenRequest {
    /**
     * Constructs a new <code>BurnTokenRequest</code>.
     * @alias module:model/BurnTokenRequest
     * @param fee {Number} Fee in satoshi to include in the issuance transaction min 10000 (0.0001 NEBL)
     * @param burn {Array.<module:model/BurnTokenRequestBurn>} Array of objects representing tokens to be burned
     */
    constructor(fee, burn) { 
        
        BurnTokenRequest.initialize(this, fee, burn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fee, burn) { 
        obj['fee'] = fee;
        obj['burn'] = burn;
    }

    /**
     * Constructs a <code>BurnTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BurnTokenRequest} obj Optional instance to populate.
     * @return {module:model/BurnTokenRequest} The populated <code>BurnTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BurnTokenRequest();

            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], ['String']);
            }
            if (data.hasOwnProperty('transfer')) {
                obj['transfer'] = ApiClient.convertToType(data['transfer'], [SendTokenRequestTo]);
            }
            if (data.hasOwnProperty('burn')) {
                obj['burn'] = ApiClient.convertToType(data['burn'], [BurnTokenRequestBurn]);
            }
        }
        return obj;
    }


}

/**
 * Fee in satoshi to include in the issuance transaction min 10000 (0.0001 NEBL)
 * @member {Number} fee
 */
BurnTokenRequest.prototype['fee'] = undefined;

/**
 * Array of addresses to send the token from
 * @member {Array.<String>} from
 */
BurnTokenRequest.prototype['from'] = undefined;

/**
 * @member {Array.<module:model/SendTokenRequestTo>} transfer
 */
BurnTokenRequest.prototype['transfer'] = undefined;

/**
 * Array of objects representing tokens to be burned
 * @member {Array.<module:model/BurnTokenRequestBurn>} burn
 */
BurnTokenRequest.prototype['burn'] = undefined;






export default BurnTokenRequest;

