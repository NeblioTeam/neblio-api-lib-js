/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTxResponseVin from './GetTxResponseVin';
import GetTxResponseVout from './GetTxResponseVout';

/**
 * The GetTxResponse model module.
 * @module model/GetTxResponse
 * @version 1.2.1
 */
class GetTxResponse {
    /**
     * Constructs a new <code>GetTxResponse</code>.
     * @alias module:model/GetTxResponse
     */
    constructor() { 
        
        GetTxResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetTxResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTxResponse} obj Optional instance to populate.
     * @return {module:model/GetTxResponse} The populated <code>GetTxResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTxResponse();

            if (data.hasOwnProperty('txid')) {
                obj['txid'] = ApiClient.convertToType(data['txid'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('locktime')) {
                obj['locktime'] = ApiClient.convertToType(data['locktime'], 'Number');
            }
            if (data.hasOwnProperty('vin')) {
                obj['vin'] = ApiClient.convertToType(data['vin'], [GetTxResponseVin]);
            }
            if (data.hasOwnProperty('vout')) {
                obj['vout'] = ApiClient.convertToType(data['vout'], [GetTxResponseVout]);
            }
            if (data.hasOwnProperty('blocktime')) {
                obj['blocktime'] = ApiClient.convertToType(data['blocktime'], 'Number');
            }
            if (data.hasOwnProperty('blockheight')) {
                obj['blockheight'] = ApiClient.convertToType(data['blockheight'], 'Number');
            }
            if (data.hasOwnProperty('totalsent')) {
                obj['totalsent'] = ApiClient.convertToType(data['totalsent'], 'Number');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('blockhash')) {
                obj['blockhash'] = ApiClient.convertToType(data['blockhash'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Number');
            }
            if (data.hasOwnProperty('confirmations')) {
                obj['confirmations'] = ApiClient.convertToType(data['confirmations'], 'Number');
            }
            if (data.hasOwnProperty('valueOut')) {
                obj['valueOut'] = ApiClient.convertToType(data['valueOut'], 'Number');
            }
            if (data.hasOwnProperty('valueIn')) {
                obj['valueIn'] = ApiClient.convertToType(data['valueIn'], 'Number');
            }
            if (data.hasOwnProperty('fees')) {
                obj['fees'] = ApiClient.convertToType(data['fees'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * TXID of transaction
 * @member {String} txid
 */
GetTxResponse.prototype['txid'] = undefined;

/**
 * Transaction version
 * @member {Number} version
 */
GetTxResponse.prototype['version'] = undefined;

/**
 * Transaction locktime
 * @member {Number} locktime
 */
GetTxResponse.prototype['locktime'] = undefined;

/**
 * Array of transaction inputs
 * @member {Array.<module:model/GetTxResponseVin>} vin
 */
GetTxResponse.prototype['vin'] = undefined;

/**
 * Array of transaction outputs
 * @member {Array.<module:model/GetTxResponseVout>} vout
 */
GetTxResponse.prototype['vout'] = undefined;

/**
 * Block time of this transaction
 * @member {Number} blocktime
 */
GetTxResponse.prototype['blocktime'] = undefined;

/**
 * Block height of this transaction
 * @member {Number} blockheight
 */
GetTxResponse.prototype['blockheight'] = undefined;

/**
 * Total NEBL sent in this transaction in satoshis
 * @member {Number} totalsent
 */
GetTxResponse.prototype['totalsent'] = undefined;

/**
 * Total NEBL used as fee for this transcation in satoshis
 * @member {Number} fee
 */
GetTxResponse.prototype['fee'] = undefined;

/**
 * Hash of the block this transaction is in
 * @member {String} blockhash
 */
GetTxResponse.prototype['blockhash'] = undefined;

/**
 * Transaction time
 * @member {Number} time
 */
GetTxResponse.prototype['time'] = undefined;

/**
 * Number of transaction confirmations
 * @member {Number} confirmations
 */
GetTxResponse.prototype['confirmations'] = undefined;

/**
 * Total NEBL output in this transaction
 * @member {Number} valueOut
 */
GetTxResponse.prototype['valueOut'] = undefined;

/**
 * Total NEBL input in this transaction
 * @member {Number} valueIn
 */
GetTxResponse.prototype['valueIn'] = undefined;

/**
 * Total NEBL used in fees for this transaction
 * @member {Number} fees
 */
GetTxResponse.prototype['fees'] = undefined;

/**
 * Transcation size in bytes
 * @member {Number} size
 */
GetTxResponse.prototype['size'] = undefined;






export default GetTxResponse;

