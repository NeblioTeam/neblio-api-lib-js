/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetTokenMetadataResponseMetadataOfIssuanceDataUserData', 'model/IssueTokenRequestMetadataEncryptions', 'model/IssueTokenRequestMetadataRules', 'model/IssueTokenRequestMetadataUrls'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GetTokenMetadataResponseMetadataOfIssuanceDataUserData'), require('./IssueTokenRequestMetadataEncryptions'), require('./IssueTokenRequestMetadataRules'), require('./IssueTokenRequestMetadataUrls'));
  } else {
    // Browser globals (root is window)
    if (!root.NeblioRestApiSuite) {
      root.NeblioRestApiSuite = {};
    }
    root.NeblioRestApiSuite.IssueTokenRequestMetadata = factory(root.NeblioRestApiSuite.ApiClient, root.NeblioRestApiSuite.GetTokenMetadataResponseMetadataOfIssuanceDataUserData, root.NeblioRestApiSuite.IssueTokenRequestMetadataEncryptions, root.NeblioRestApiSuite.IssueTokenRequestMetadataRules, root.NeblioRestApiSuite.IssueTokenRequestMetadataUrls);
  }
}(this, function(ApiClient, GetTokenMetadataResponseMetadataOfIssuanceDataUserData, IssueTokenRequestMetadataEncryptions, IssueTokenRequestMetadataRules, IssueTokenRequestMetadataUrls) {
  'use strict';




  /**
   * The IssueTokenRequestMetadata model module.
   * @module model/IssueTokenRequestMetadata
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>IssueTokenRequestMetadata</code>.
   * Object representing all metadata at token issuance
   * @alias module:model/IssueTokenRequestMetadata
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>IssueTokenRequestMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IssueTokenRequestMetadata} obj Optional instance to populate.
   * @return {module:model/IssueTokenRequestMetadata} The populated <code>IssueTokenRequestMetadata</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('tokenName')) {
        obj['tokenName'] = ApiClient.convertToType(data['tokenName'], 'String');
      }
      if (data.hasOwnProperty('issuer')) {
        obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('urls')) {
        obj['urls'] = IssueTokenRequestMetadataUrls.constructFromObject(data['urls']);
      }
      if (data.hasOwnProperty('userData')) {
        obj['userData'] = GetTokenMetadataResponseMetadataOfIssuanceDataUserData.constructFromObject(data['userData']);
      }
      if (data.hasOwnProperty('encryptions')) {
        obj['encryptions'] = ApiClient.convertToType(data['encryptions'], [IssueTokenRequestMetadataEncryptions]);
      }
      if (data.hasOwnProperty('rules')) {
        obj['rules'] = IssueTokenRequestMetadataRules.constructFromObject(data['rules']);
      }
    }
    return obj;
  }

  /**
   * Token Symbol it will be identified by (ex. NIBBL)
   * @member {String} tokenName
   */
  exports.prototype['tokenName'] = undefined;
  /**
   * Name of token issuer
   * @member {String} issuer
   */
  exports.prototype['issuer'] = undefined;
  /**
   * Long name or description of token (ex. Nibble)
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/IssueTokenRequestMetadataUrls} urls
   */
  exports.prototype['urls'] = undefined;
  /**
   * @member {module:model/GetTokenMetadataResponseMetadataOfIssuanceDataUserData} userData
   */
  exports.prototype['userData'] = undefined;
  /**
   * Array of encryption instruction objects for encrypting userData
   * @member {Array.<module:model/IssueTokenRequestMetadataEncryptions>} encryptions
   */
  exports.prototype['encryptions'] = undefined;
  /**
   * @member {module:model/IssueTokenRequestMetadataRules} rules
   */
  exports.prototype['rules'] = undefined;



  return exports;
}));


