/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetFaucetResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GetFaucetResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.NeblioRestApiSuite) {
      root.NeblioRestApiSuite = {};
    }
    root.NeblioRestApiSuite.TestnetFaucetApi = factory(root.NeblioRestApiSuite.ApiClient, root.NeblioRestApiSuite.GetFaucetResponse);
  }
}(this, function(ApiClient, GetFaucetResponse) {
  'use strict';

  /**
   * TestnetFaucet service.
   * @module api/TestnetFaucetApi
   * @version 1.1.1
   */

  /**
   * Constructs a new TestnetFaucetApi. 
   * @alias module:api/TestnetFaucetApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the testnetGetFaucet operation.
     * @callback module:api/TestnetFaucetApi~testnetGetFaucetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFaucetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Withdraws testnet NEBL to the specified address
     * Withdraw testnet NEBL to your Neblio Testnet address. By default amount is 1500000000 or 15 NEBL and has a max of 50 NEBL. Only 2 withdrawals allowed per 24 hour period. 
     * @param {String} address Your Neblio Testnet Address
     * @param {Object} opts Optional parameters
     * @param {Number} opts.amount Amount of NEBL to withdrawal in satoshis
     * @param {module:api/TestnetFaucetApi~testnetGetFaucetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFaucetResponse}
     */
    this.testnetGetFaucet = function(address, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling testnetGetFaucet");
      }


      var pathParams = {
      };
      var queryParams = {
        'address': address,
        'amount': opts['amount'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GetFaucetResponse;

      return this.apiClient.callApi(
        '/testnet/faucet', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
