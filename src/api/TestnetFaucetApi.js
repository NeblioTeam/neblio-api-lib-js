/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetFaucetResponse from '../model/GetFaucetResponse';

/**
* TestnetFaucet service.
* @module api/TestnetFaucetApi
* @version 1.2.1
*/
export default class TestnetFaucetApi {

    /**
    * Constructs a new TestnetFaucetApi. 
    * @alias module:api/TestnetFaucetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the testnetGetFaucet operation.
     * @callback module:api/TestnetFaucetApi~testnetGetFaucetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFaucetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Withdraws testnet NEBL to the specified address
     * Withdraw testnet NEBL to your Neblio Testnet address. By default amount is 1500000000 or 15 NEBL and has a max of 50 NEBL. Only 2 withdrawals allowed per 24 hour period. 
     * @param {String} address Your Neblio Testnet Address
     * @param {Object} opts Optional parameters
     * @param {Number} opts.amount Amount of NEBL to withdrawal in satoshis
     * @param {module:api/TestnetFaucetApi~testnetGetFaucetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFaucetResponse}
     */
    testnetGetFaucet(address, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling testnetGetFaucet");
      }

      let pathParams = {
      };
      let queryParams = {
        'address': address,
        'amount': opts['amount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetFaucetResponse;
      return this.apiClient.callApi(
        '/testnet/faucet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
